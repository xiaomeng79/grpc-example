syntax = "proto3";

package srv.proto;
option go_package = "srv/proto/gen";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "srv/proto/system.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "GRPC EXAMPLE";
        version: "0.1.0";
        contact: {
            name: "grpc-example";
            url: "https://github.com/xiaomeng79/grpc-example";
        };
    };
    host: "0.0.0.0:8080";
    //     base_path: "/backend/v1";
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
        security: {
            key: "ApiKeyAuth";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "X-API-Key";
            }
        }
    }
    security: {
        security_requirement: {
            key: "ApiKeyAuth";
            value: {};
        }
    }
    responses: {
        key: "403";
        value: {
            description: "没权限";
        }
    }
};

service MatchService {
    // 版本信息
    rpc Version(google.protobuf.Empty) returns (srv.proto.Version) {
        option (google.api.http) = {
          get: "/version"
        };
    }
}


